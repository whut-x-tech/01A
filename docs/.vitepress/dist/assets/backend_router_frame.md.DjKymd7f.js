import{_ as a,c as t,o as l,ah as e}from"./chunks/framework.JQl5l04a.js";const r="/01A/assets/43c202736616b2469a961e1b6e6ac97c.DimpUlmO.png",p="/01A/assets/773707e9124382a42c8de4629575c81b.CqDNwH6u.png",n="/01A/assets/167ecbd62326511c0636d0ea05e92b2c_720.CAtrVlvH.png",m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"backend_router/frame.md","filePath":"backend_router/frame.md","lastUpdated":1747585529000}'),o={name:"backend_router/frame.md"};function s(h,i,c,d,u,g){return l(),t("div",null,i[0]||(i[0]=[e('<h2 id="java开发相关的框架" tabindex="-1">java开发相关的框架 <a class="header-anchor" href="#java开发相关的框架" aria-label="Permalink to &quot;java开发相关的框架&quot;">​</a></h2><h3 id="spring框架" tabindex="-1">Spring框架 <a class="header-anchor" href="#spring框架" aria-label="Permalink to &quot;Spring框架&quot;">​</a></h3><hr><h3 id="spring-springmvc-springboot" tabindex="-1">Spring SpringMVC SpringBoot <a class="header-anchor" href="#spring-springmvc-springboot" aria-label="Permalink to &quot;Spring SpringMVC SpringBoot&quot;">​</a></h3><hr><h4 id="spring" tabindex="-1">Spring <a class="header-anchor" href="#spring" aria-label="Permalink to &quot;Spring&quot;">​</a></h4><ol><li><p>核心功能</p><ul><li><p><code>AOP</code></p></li><li><p><code>IOC </code></p></li></ul></li><li><p>重要模块</p><ul><li><p>Core Container</p></li><li><p>AOP</p></li><li><p>Data Access</p></li><li><p>Spring Web</p></li><li><p>Spring Test <img src="'+r+'" alt="alt text"></p></li></ul></li></ol><hr><h4 id="spring-mvc" tabindex="-1">Spring MVC <a class="header-anchor" href="#spring-mvc" aria-label="Permalink to &quot;Spring MVC&quot;">​</a></h4><p>Spring MVC是Spring的一个模块，主要赋予Spring快速构建MVC架构的Web程序的能力，MVC是模型(Model)、视图(View)、控制器(Controller)的简写，核心思想是通过将业务逻辑、数据、显示分离来组织代码 <img src="'+p+'" alt="alt text"></p><h4 id="spring-boot" tabindex="-1">Spring Boot <a class="header-anchor" href="#spring-boot" aria-label="Permalink to &quot;Spring Boot&quot;">​</a></h4><p>Spring Boot的核心目标是通过简化配置，优化依赖管理、加速项目启动和部署流程</p><p>包括以下几个部分</p><ul><li><p>执行器：监控和跟踪应用程序</p></li><li><p>服务器</p></li><li><p>异常处理机制</p></li><li><p>依赖项管理</p></li><li><p>自动化配置 <img src="'+n+'" alt="alt text"></p></li></ul><p>学习建议：</p><ul><li><p>初学：使用SpringBoot做一个简单的demo，了解SpringBoot的使用，了解项目构建工具Maven/Gradle，配置文件，bean与IOC， MVC架构，ORM框架MyBatis，常用注解</p></li><li><p>精进：AOP的使用，事务，自动装配，服务器，系统监控</p></li><li><p>深入：源码解读</p></li></ul><hr><h3 id="spring-cloud" tabindex="-1">Spring Cloud <a class="header-anchor" href="#spring-cloud" aria-label="Permalink to &quot;Spring Cloud&quot;">​</a></h3><hr><h3 id="netty" tabindex="-1">Netty <a class="header-anchor" href="#netty" aria-label="Permalink to &quot;Netty&quot;">​</a></h3><p>Netty是一个基于NIO的client-server框架，可以快速简单地开发网络应用程序，Netty简化了TCP和UDP等网络编程，并且支持多种协议如FTP，SMTP，HTTP以及各种二进制和基于文本的传统协议。</p><h4 id="netty的应用" tabindex="-1">Netty的应用 <a class="header-anchor" href="#netty的应用" aria-label="Permalink to &quot;Netty的应用&quot;">​</a></h4><ul><li><p>RPC框架的网络通信工具</p></li><li><p>自定义实现HTTP服务器</p></li><li><p>即时通讯系统</p></li><li><p>消息推送系统</p></li></ul><h4 id="前置知识" tabindex="-1">前置知识 <a class="header-anchor" href="#前置知识" aria-label="Permalink to &quot;前置知识&quot;">​</a></h4><ul><li><p>Java基础</p></li><li><p>JUC基础</p></li><li><p>TCP，Socket</p></li></ul><h4 id="学习内容" tabindex="-1">学习内容 <a class="header-anchor" href="#学习内容" aria-label="Permalink to &quot;学习内容&quot;">​</a></h4><ul><li><p>核心组件</p><ul><li><p>Bytebuf</p></li><li><p>Bootstrap和ServerBootstrap</p></li><li><p>Channel</p></li><li><p>EventLoop</p></li><li><p>ChannelHandler和ChannelPipeline</p></li><li><p>ChanelFuture</p></li></ul></li><li><p>I/O模型</p><ul><li><p>BIO</p></li><li><p>NIO</p></li><li><p>AIO</p></li></ul></li><li><p>Netty的线程模型</p></li><li><p>Netty工作原理</p></li></ul><h4 id="推荐资源" tabindex="-1">推荐资源 <a class="header-anchor" href="#推荐资源" aria-label="Permalink to &quot;推荐资源&quot;">​</a></h4><ul><li><p>Netty官网 netty.io/</p></li><li><p>《Netty》实战</p></li><li><p>《Netty核心原理与手写RPC框架实战》</p></li><li><p>Netty源码 github.com/netty/netty</p></li></ul><h3 id="学习建议" tabindex="-1">学习建议 <a class="header-anchor" href="#学习建议" aria-label="Permalink to &quot;学习建议&quot;">​</a></h3><p>Netty的使用主要还是以实践为主，建议先了解相关的概念后，找一个项目来实战，在学习项目的过程中学习Netty，这里比较推荐的项目是RPC。后续可以深入学习源码，比如Netty源码，Dubbo源码</p><hr><table tabindex="0"><thead><tr><th><strong>作者</strong>：something</th><th><a href="#"><img src="https://img.icons8.com/ios-glyphs/30/000000/github.png" alt="GitHub" style="vertical-align:middle;"></a></th></tr></thead></table>',33)]))}const S=a(o,[["render",s]]);export{m as __pageData,S as default};
